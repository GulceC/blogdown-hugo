<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux | Assoc.Prof.Dr. Alper YILMAZ</title>
    <link>http://alperyilmaz.site/tag/linux/</link>
      <atom:link href="http://alperyilmaz.site/tag/linux/index.xml" rel="self" type="application/rss+xml" />
    <description>linux</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2021</copyright><lastBuildDate>Thu, 08 Apr 2010 09:11:53 +0000</lastBuildDate>
    <image>
      <url>http://alperyilmaz.site/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>linux</title>
      <link>http://alperyilmaz.site/tag/linux/</link>
    </image>
    
    <item>
      <title>Most used commands in history</title>
      <link>http://alperyilmaz.site/post/2010-04-08-most-used-commands-in-history/</link>
      <pubDate>Thu, 08 Apr 2010 09:11:53 +0000</pubDate>
      <guid>http://alperyilmaz.site/post/2010-04-08-most-used-commands-in-history/</guid>
      <description>&lt;p&gt;Most of the &amp;ldquo;most used commands&amp;rdquo; approaches does not consider pipes and other complexities.&lt;/p&gt;
&lt;p&gt;This approach considers pipes, process substitution by backticks or &lt;code&gt;$()&lt;/code&gt; and multiple commands separated by &lt;code&gt;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Perl regular expression breaks up each line using &lt;code&gt;|&lt;/code&gt; or &lt;code&gt;&amp;lt;(&lt;/code&gt; or &lt;code&gt;;&lt;/code&gt; or ` or &lt;code&gt;$(&lt;/code&gt; and picks the first word (excluding &amp;ldquo;do&amp;rdquo; in case of for loops)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;history | perl -F&amp;quot;\||&amp;lt;\(|;|\`|\\$\(&amp;quot; -alne &#39;foreach (@F) { print $1 if /\b((?!do)[a-z]+)\b/i }&#39; | sort | uniq -c | sort -nr | head
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s generate a fake history file which looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;1  command file | command file | command | command
2  command &amp;lt;(command file) &amp;lt;(command file)
3  command file &amp;gt; file
4  for i in `command file`; do command file; command file; done | command
5  for i in $(command file); do command file; command file | command; done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This approach successfully counts 16 occurrences of &amp;ldquo;command&amp;rdquo; and 2 occurrences of &amp;ldquo;for&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Note: if you are using lots of perl one-liners, the perl commands/functions will be counted as well in this approach, since semicolon is used as a separator&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>bash completion for scp</title>
      <link>http://alperyilmaz.site/post/2010-03-10-bash-completion-for-scp/</link>
      <pubDate>Wed, 10 Mar 2010 16:30:03 +0000</pubDate>
      <guid>http://alperyilmaz.site/post/2010-03-10-bash-completion-for-scp/</guid>
      <description>&lt;p&gt;I have been looking for a solution for broken bash_completion for scp command. I was thinking my ssh was not configured correctly for password-less login. But I just found out that bash completion is broken for Ubuntu 9.10.&lt;/p&gt;
&lt;p&gt;If you are suffering from same symptom, please read &lt;a href=&#34;http://pro.grammatic.org/post-fixing-scp-completion-in-ubuntu-910-73.aspx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this article&lt;/a&gt; for fix.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
