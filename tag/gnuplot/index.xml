<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gnuplot | Assoc.Prof.Dr. Alper YILMAZ</title><link>http://alperyilmaz.site/tag/gnuplot/</link><atom:link href="http://alperyilmaz.site/tag/gnuplot/index.xml" rel="self" type="application/rss+xml"/><description>gnuplot</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2021</copyright><lastBuildDate>Sat, 16 Oct 2010 22:13:24 +0000</lastBuildDate><image><url>http://alperyilmaz.site/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url><title>gnuplot</title><link>http://alperyilmaz.site/tag/gnuplot/</link></image><item><title>Plot one-liner generated data with gnuplot</title><link>http://alperyilmaz.site/post/2010-10-16-plot-one-liner-generated-data-with-gnuplot/</link><pubDate>Sat, 16 Oct 2010 22:13:24 +0000</pubDate><guid>http://alperyilmaz.site/post/2010-10-16-plot-one-liner-generated-data-with-gnuplot/</guid><description>&lt;p>In this post, I&amp;rsquo;ll demonstrate how to use gnuplot in a one-liner. We&amp;rsquo;ll use the pipe but unfortunately you cannot pipe raw data to gnuplot directly (as far as I know). The piped data should contain basic gnuplot commands on top. So, we&amp;rsquo;ll use the following template:&lt;/p>
&lt;pre>&lt;code class="language-bash">very-complicated-data-generating-commands | sed -e &amp;quot;1i\plot '-' &amp;quot; | gnuplot -persist
&lt;/code>&lt;/pre>
&lt;p>If you&amp;rsquo;re interested in quickly see how this works, try something simple:&lt;/p>
&lt;pre>&lt;code class="language-bash">seq 1 10 | sed -e &amp;quot;1i\plot '-'&amp;quot; | gnuplot -persist
&lt;/code>&lt;/pre>
&lt;p>Before sed command, you can write as complicated as possible command to generate data and inside sed command you can put long gnuplot commands to obtain graphs. Let&amp;rsquo;s see the counts of most used 20 commands from history (mentioned in an &lt;a href="http://alperyilmaz.site/post/2010-04-08-most-used-commands-in-history/">earlier post&lt;/a> with bar chart.&lt;/p>
&lt;pre>&lt;code class="language-bash">cat ~/.bash_history|grep -v &amp;quot;^#&amp;quot; | perl -F&amp;quot;\||&amp;lt;\(|;|\`|\\$\(&amp;quot; -alne 'foreach (@F) { print $1 if /^.*?(\w+)\b/i }' | sort | uniq -c | sort -nr | head -20 | awk '{print $2&amp;quot;\t&amp;quot;$1}' | sed -e &amp;quot;1i\set boxwidth 0.5\nset style fill solid noborder\nset xtics nomirror rotate by -60\nset format x '-%s'\nplot '-' using 2:xticlabels(1) with boxes notitle&amp;quot; | gnuplot -persist
&lt;/code>&lt;/pre>
&lt;p>Resulting image looks like this:&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="http://alperyilmaz.site/img/history-top-occur-graph550x350.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p>If you want to save the output in png format, what you do is simply add the command &lt;code>set term png size 600,300&lt;/code> to your one-liner. I chose width 600px and height 300px as example. In this case, gnuplot prints the contents of png file to screen, so we need to direct it to a filename, as shown below:&lt;/p>
&lt;pre>&lt;code class="language-bash">cat ~/.bash_history|grep -v &amp;quot;^#&amp;quot; | perl -F&amp;quot;\||&amp;lt;\(|;|\`|\\$\(&amp;quot; -alne 'foreach (@F) { print $1 if /^.*?(\w+)\b/i }' | sort | uniq -c | sort -nr | head -20 | awk '{print $2&amp;quot;\t&amp;quot;$1}' | sed -e &amp;quot;1i\set term png size 600,350\nset boxwidth 0.5\nset style fill solid noborder\nset xtics nomirror rotate by -60\nset format x '-%s'\nplot '-' using 2:xticlabels(1) with boxes notitle&amp;quot; | gnuplot &amp;gt; sample_image.png
&lt;/code>&lt;/pre></description></item><item><title>gnuplot boxerror, barchart with error bars</title><link>http://alperyilmaz.site/post/2010-04-14-gnuplot-boxerror-barchart-with-error-bars/</link><pubDate>Wed, 14 Apr 2010 14:31:26 +0000</pubDate><guid>http://alperyilmaz.site/post/2010-04-14-gnuplot-boxerror-barchart-with-error-bars/</guid><description>&lt;p>When I was trying to generate an image containing scatter-plot and a barchart with error bars, I got stuck with barchart part. There were no demos or samples that produces the desired output. So, I ended up figuring it out myself.&lt;/p>
&lt;p>Below is the gnuplot code, data sample and the output.&lt;/p>
&lt;pre>&lt;code class="language-gnuplot">set term png size 500,400
set output &amp;quot;boxerror-test.png&amp;quot;
set boxwidth 0.5
set style fill transparent solid 0.5 noborder
set yrange [0:100]
set xrange [0:5]
plot &amp;quot;boxerror-test.data&amp;quot; using 1:2:3:xticlabels(4) w boxerror lc rgb &amp;quot;#444444&amp;quot; lw 1.5 title &amp;quot;BoxerrorTest&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>Sample data:&lt;/p>
&lt;pre>&lt;code>1 25 3 A
2 33 5 B
3 50 2 C
4 12 0.5 D
&lt;/code>&lt;/pre>
&lt;p>And the final output:&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="http://alperyilmaz.site/img/boxerror-test.png" alt="" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p>Ideally, I was trying to plot the following data:&lt;/p>
&lt;pre>&lt;code>A 25 3
B 33 5
C 50 2
D 12 0.5
&lt;/code>&lt;/pre>
&lt;p>But I wasn&amp;rsquo;t able to use first column directly as data. So, first column is actually numbers and fourth column provides the xticlabels.&lt;/p>
&lt;p>If your gnuplot version is less than 4.4, transparency won&amp;rsquo;t work, in that case remove &amp;ldquo;transparent&amp;rdquo; from set style line.&lt;/p></description></item></channel></rss>